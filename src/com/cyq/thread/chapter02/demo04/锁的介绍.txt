·锁的分类：
    1.乐观锁和悲观锁
        ·乐观锁，它是以一种乐观的态度对待每次操作的，它认为多个线程对同一个资源进行操作时不会产生线程安全问题，所以多个线程
        同时对一个资源进行操作可以并发执行，不会进行加锁操作。
        ·悲观锁，它是以一种悲观的态度对待每一次操作的，它认为多个线程对同一个资源进行操作时会产生线程安全问题，所以相对于每一次的操作
        都会加排他锁，所以多个线程对同一个资源进行操作会出现锁等待的情况。
    2.公平锁和非公平锁
        ·公平锁是多个线程并发执行会按照排队的方式进行执行，先到先执行，后到后执行。
        ·非公平锁是多个线程并发执行不会按照先到先执行，后到后执行的方式，而是采用插队的方式。
        ·通过ReentrantLocak的构造方法可以创建公平锁和非公平锁，true为公平锁，false为非公平锁。默认是非公平锁。
        ·在程序中要尽量使用非公平锁，因为公平锁可能会带来性能开销。
    3.独占锁和共享锁
        ·独占锁是只能被一个线程访问，相当于排它锁。ReentrantLock是独占锁。
        ·共享锁是可以被多个线程同时访问。ReadWriterLock是共享锁。
    4.可重入锁和不可重入锁
        ·可重入锁指的是当前线程在获取并不释放锁的情况下可以再次获取该锁。可重入锁的内部会存储获取锁的线程标示，并有一个锁获取的计数器，
        每次获取都会进行加一操作，释放时进行减一，当计数器减为0时会把线程标示置为null。synchronized是可重入锁。
        ·不可重入锁指的是当前线程在获取并不释放锁的情况下不可以再次获取该锁，这种情况下会出现永久阻塞。
    5.自旋锁
        ·自旋锁是占用CPU资源不断的去获取锁，默认次数是10。自旋锁是使用CPU的时间来换取线程阻塞和调度的开销。




